services:
  web:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
      - ./chroma_db:/app/chroma_db
      - ./.env:/app/.env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - ./.env
    restart: unless-stopped
    networks:
      - app-network
    command: >
      bash -c "
        echo 'Starting application...' &&
        echo 'OPENAI_API_KEY status: ${OPENAI_API_KEY:+available}${OPENAI_API_KEY:-missing}' &&
        echo 'FLASK_APP: ${FLASK_APP}' &&
        echo 'FLASK_ENV: ${FLASK_ENV}' &&
        echo 'FLASK_DEBUG: ${FLASK_DEBUG}' &&
        echo 'PYTHONUNBUFFERED: ${PYTHONUNBUFFERED}' &&
        gunicorn --worker-class eventlet -w 1 --bind 0.0.0.0:8080 --log-level debug run:app
      "

networks:
  app-network:
    driver: bridge